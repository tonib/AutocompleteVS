
Make tests with empty document (probable errors with buffer limits)

Make a end trim of suggestion (unwanted line breaks)
set ollama settings:
	only the most probable, no temperature or creative stuff
		Exceptions: Re-suggest in the same place: Try an alternative suggestion
	reproducible suggestions
support for openai api
set context limits for autocompletion
show autocompletion (TODOs)
configure context size
multiline suggestions: tab characters are replaced by 4 spaces. Read the number of spaces to place from vs settings
Check read only editors (ex git history): Do not handle autocompletion here
Check diff editor (ex git current changes): autocompletion should be handled here
Show something on the UI (adorment or something else), if autocompletions generation is running
ERROR: If you type "public bool IsOut(Point p)" and you ask a suggestion, if between the codelens info si added, the suggestion
	appears in the codelens suggestion, and not in the real code line
Performance: If we are generatign a suggestions in non empty line, only the first line will be rendered. It's not needed to
	generate a full multiline suggestion. So, two options: 1) Stop suggestion generation when a \n is reached. 2) Cache
	generation in case current suggestion is confirmed
Refactoring: Move all MEF Exports to ViewAutocompleteHandler ???
Set max number of tokens to generate
Check other models
Suppor for Ctrl + < ??? (undo adding word)
Codeqwen: Support for <|cursor|> Check WTF is this (cursor position???)
Check larger models (performance)
If when keep typing, the text keeps the suggestion, suggestion should not be removed

Try to put again nuget ollamasharp reference:
	IS NOT WORKING


How to show formatted code:
	https://stackoverflow.com/questions/64061612/how-to-implement-the-default-outlining-tool-tip-in-visual-studio-extension

keyboard handling (remove this, no longer needed):
	https://learn.microsoft.com/en-us/visualstudio/extensibility/binding-keyboard-shortcuts-to-menu-items?view=vs-2022
	https://www.alashiban.com/multi-editing-tutorial/?doing_wp_cron=1740908324.0118949413299560546875
	https://learn.microsoft.com/en-us/visualstudio/extensibility/internals/command-routing-algorithm?view=vs-2022